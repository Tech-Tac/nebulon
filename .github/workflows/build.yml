name: Multi-Platform Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Flutter App
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        platform: [linux, windows, android, android-debug, web, macos, ios]
        include:
          - platform: linux
            runner: ubuntu-latest
          - platform: windows
            runner: windows-latest
          - platform: android
            runner: ubuntu-latest
          - platform: web
            runner: ubuntu-latest
          - platform: macos
            runner: macos-latest
          - platform: ios
            runner: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - run: flutter --version

      - name: Install Linux Dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake clang pkg-config libgtk-3-dev libsecret-1-dev

      - name: Install Windows Dependencies
        if: matrix.platform == 'windows'
        run: |
          choco install cmake ninja -y

      - name: Install dependencies
        run: flutter pub get

      - name: Update Flutter Dependencies
        run: flutter pub upgrade --major-versions

      - name: Build for ${{ matrix.platform }}
        shell: bash
        run: |
          if [[ "${{ matrix.platform }}" == "linux" ]]; then
            flutter build linux --release
          elif [[ "${{ matrix.platform }}" == "windows" ]]; then
            flutter build windows --release
          elif [[ "${{ matrix.platform }}" == "android" ]]; then
            flutter build apk --release
          elif [[ "${{ matrix.platform }}" == "android-debug" ]]; then
            flutter build apk --debug --target-platform android-arm64
          elif [[ "${{ matrix.platform }}" == "web" ]]; then
            flutter build web --release
          elif [[ "${{ matrix.platform }}" == "macos" ]]; then
            flutter build macos --release
          elif [[ "${{ matrix.platform }}" == "ios" ]]; then
            flutter build ios --release --no-codesign
          fi

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/ios/iphoneos/*.app
            build/web
            build/windows/x64/runner/Release
            build/linux/x64/release/bundle
            build/macos/Build/Products/Release
